// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldUserName holds the string denoting the user_name field in the database.
	FieldUserName = "user_name"
	// FieldWasteLimit holds the string denoting the waste_limit field in the database.
	FieldWasteLimit = "waste_limit"
	// EdgeWastes holds the string denoting the wastes edge name in mutations.
	EdgeWastes = "wastes"
	// Table holds the table name of the user in the database.
	Table = "users"
	// WastesTable is the table that holds the wastes relation/edge.
	WastesTable = "wastes"
	// WastesInverseTable is the table name for the Waste entity.
	// It exists in this package in order to avoid circular dependency with the "waste" package.
	WastesInverseTable = "wastes"
	// WastesColumn is the table column denoting the wastes relation/edge.
	WastesColumn = "user_wastes"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldFirstName,
	FieldLastName,
	FieldUserName,
	FieldWasteLimit,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
